‚Äî Closures: trailing syntax, capturing values, shorthand params.

1.

–©–æ —Ç–∞–∫–µ closure —É Swift? –ß–∏–º –≤–æ–Ω–æ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ –∑–≤–∏—á–∞–π–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó?

2.

–ü–æ—è—Å–Ω–∏, —â–æ —Ç–∞–∫–µ trailing closure syntax —ñ –∫–æ–ª–∏ –º–∏ –º–æ–∂–µ–º–æ –π–æ–≥–æ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏.
–ù–∞–≤–µ–¥–∏ –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –∑—ñ –∑–≤–∏—á–∞–π–Ω–∏–º —ñ –∑ trailing closure.

3.

–©–æ –æ–∑–Ω–∞—á–∞—î ‚Äúclosure capturing values‚Äù?
–ù–∞–≤–µ–¥–∏ –ø—Ä–∏–∫–ª–∞–¥ closure, —è–∫–µ –∑–±–µ—Ä—ñ–≥–∞—î –π –∑–º—ñ–Ω—é—î –∑–æ–≤–Ω—ñ—à–Ω—é –∑–º—ñ–Ω–Ω—É.

4.

–£ Swift —î —Å–∫–æ—Ä–æ—á–µ–Ω—ñ —ñ–º–µ–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —É –∑–∞–º–∏–∫–∞–Ω–Ω—è—Ö ($0, $1, ‚Ä¶).
–ö–æ–ª–∏ —ñ —è–∫ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—ñ shorthand –ø–∞—Ä–∞–º–µ—Ç—Ä–∏?
–ù–∞–ø–∏—à–∏ –ø—Ä–∏–∫–ª–∞–¥ —ñ–∑ –º–∞—Å–∏–≤–æ–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —á–∏ map).

5.

–Ø–∫–∞ —Ä—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ escaping —ñ non-escaping closures?
–£ —è–∫–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö —Ç—Ä–µ–±–∞ –≤–∫–∞–∑—É–≤–∞—Ç–∏ @escaping —É —Å–∏–≥–Ω–∞—Ç—É—Ä—ñ —Ñ—É–Ω–∫—Ü—ñ—ó?

–í—ñ–¥–ø–æ–≤—ñ–¥—ñ:

1. Clossure —Ü–µ –∞–Ω—ñ–æ–Ω—ñ–º–Ω—ñ –±–ª–æ–∫–∏ –∫–æ–¥—É —è–∫—ñ –º–æ–∂—É—Ç—å –∑–∞—Ö–æ–ø–ª—é–≤–∞—Ç–∏ —ñ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–º—ñ–Ω–Ω—ñ —Ç–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏. –ú–æ–∂—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è. –ù—É —Å–ø–µ—Ä—à—É —Ü–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º. 
–§—É–Ω–∫—Ü—ñ—è: let func pay(user: String, amount: Int) { } 
–ó–∞–∫—Ä–∏—Ç—Ç—è: let func pay: { (user: String, amount: Int) in  }

2. Trailing closure syntax - –≤—ñ–Ω –¥–æ–∑–≤–æ–ª—è—î —Å–ø—Ä–æ—Å—Ç–∏—Ç–∏ –∑–∞–ø–∏—Å —Ñ—É–Ω–∫—Ü—ñ–π, —è–∫—ñ –ø—Ä–∏–π–º–∞—é—Ç—å –∑–∞–∫—Ä–∏—Ç—Ç—è —è–∫ –æ—Å—Ç–∞–Ω–Ω—ñ–π –ø–∞—Ä–∞–º–µ—Ç–µ—Ä. –¢–æ–±—Ç–æ —è–∫—â–æ —É –Ω–∞—Å —î –∑–∞–∫—Ä–∏—Ç—Ç—è: 
func animate(duration: Double, animations: ()-> Void) { }. –¢–æ –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É —Ç–∞–∫–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –º–∏ –±—É–¥–µ–º–æ –≤–∫–∞–∑—É–≤–∞—Ç–∏ duration, –∞  animations - –Ω—ñ. –ë–æ —î —Ç–∞–∫–µ –ø—Ä–∞–≤–∏–ª–æ. –û—Å—å –≤–∏–∫–ª–∏–∫:  animate(duration: 3) { } –ó–ê–ú–Ü–°–¢–¨ animate(duration: 3, animations: ) { }

3. Closure capturing values –æ–∑–Ω–∞—á–∞—î —â–æ –∑–∞–∫—Ä–∏—Ç—Ç—è –ø—Ä–∏–π–º–∞—î / –∑–∞—Ö–æ–ø–ª—é—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏. –¢–æ–±—Ç–æ –∫–æ–ª–∏ –º–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ  –∑–∞–∫—Ä–∏—Ç—Ç—è —Å—Ç–æ–≤—Ä—é—î–º–æ –∑–º—ñ–Ω—É.
func travel() -> (String) -> Void {
	var counter = 1
		
	return {
		print("\(counter). I'm going to \($0)")
		counter +=  1
	}
}

4.  –¶—ñ shorthand –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ–∑–≤–æ–ª—è—é—Ç—å —Å–ø—Ä–æ—Å—Ç–∏—Ç–∏ —Å–∏–Ω—Ç–∞–∫—Å. –ó–∞–º—ñ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç—É –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É –º–∏ –±—É–¥–µ–º –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–∫–æ—Ä—á–µ–Ω–∏–π —Å–ø–æ—Å—ñ–± –≤–∫–∞–∑—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ $0. –û—Å—å –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ —É –Ω–∞—Å —î –º–∞—Å–∏–≤ –∑ —á–∏—Å–µ–ª:
let numbers = [1, 2, 3, 4, 5]
let doubled = numbers.map { $0 * 2 } // 
print(doubled) // –≤–∏–≤–µ–¥–µ —á–∏—Å–ª–∞: 2, 4, 6, 8, 10
–¶–µ –ø—Ä–æ—Å—Ç—ñ—à–µ –Ω—ñ–∂ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ü–∏–∫–ª —Ç–∞ —Å—Ç–æ—Ä—é–≤–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É –∑–º—ñ–Ω–Ω—É —É —è–∫—É –º–∏ –±—É–∂–µ–º–æ —â–æ —Ä–∞–∑—É –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω—è.

5.  –ù–µ–∑–Ω–∞—é –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –©–æ –≤–æ–Ω–∏ —Ä–æ–±–ª—è—Ç—å? –º–æ–∂–µ—à –ø–æ—è—Å–Ω–∏—Ç–∏ 


Chat Answers:
1Ô∏è‚É£ –©–æ —Ç–∞–∫–µ closure
¬´–∞–Ω–æ–Ω—ñ–º–Ω—ñ –±–ª–æ–∫–∏ –∫–æ–¥—É‚Ä¶ –º–æ–∂—É—Ç—å –∑–∞—Ö–æ–ø–ª—é–≤–∞—Ç–∏ —ñ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–º—ñ–Ω–Ω—ñ¬ª

‚úÖ –¶–µ –≤–ª—É—á–Ω–æ. Closure ‚Äî —Å–ø—Ä–∞–≤–¥—ñ ¬´–±–ª–æ–∫ –∫–æ–¥—É + —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ¬ª, —è–∫–∏–π –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è.
‚ö†Ô∏è –Ñ–¥–∏–Ω–µ ‚Äî —Ç–≤—ñ–π –ø—Ä–∏–∫–ª–∞–¥ —ñ–∑ let func pay —Ç—Ä–æ—Ö–∏ –ø–ª—É—Ç–∞—î: —Ñ—É–Ω–∫—Ü—ñ—é. –ó–∞–º—ñ—Å—Ç—å func –º–∞—î –±—É—Ç–∏ let –ø—Ä–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—ñ closure.

2Ô∏è‚É£Trailing closure syntax
–ü–æ—è—Å–Ω–∏–≤ —á–µ—Ä–µ–∑ animate(duration:)

‚úÖ –ê–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.
–î–æ–±—Ä–µ, —â–æ –ø–æ–∫–∞–∑–∞–≤ –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–ª–∏–∫—É –∑ –±–ª–æ–∫–æ–º { } –∑–∞–º—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ animations: ‚Äî —Ü–µ —Å–∞–º–µ –π —î trailing closure syntax.

3Ô∏è‚É£Capturing values
–ü–æ—è—Å–Ω–∏–≤ —á–µ—Ä–µ–∑ travel()

‚úÖ –ß—É–¥–æ–≤–æ. –¢–≤—ñ–π –ø—Ä–∏–∫–ª–∞–¥ –ø—Ä—è–º–æ –∫–ª–∞—Å–∏—á–Ω–∏–π ‚Äî –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É –∑–∞–º–∏–∫–∞–Ω–Ω—ñ. –¶–µ –π —î –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó counter.

4Ô∏è‚É£Shorthand parameters
–ü–æ—è—Å–Ω–∏–≤ —á–µ—Ä–µ–∑ $0 —É map

‚úÖ –°—É–ø–µ—Ä. –¶–µ —è–∫—Ä–∞–∑ —Å–∫–æ—Ä–æ—á–µ–Ω–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∑–∞–º—ñ—Å—Ç—å (number) in ‚Ä¶.
–ú–æ–∂–Ω–∞ —â–µ –∑–≥–∞–¥–∞—Ç–∏ $1, $2 —è–∫—â–æ –±—ñ–ª—å—à–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.

5Ô∏è‚É£ üìù –†—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ escaping —ñ non-escaping closures

–ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º closure-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —É —Ñ—É–Ω–∫—Ü—ñ—è—Ö —É Swift non-escaping.
–¢–æ–±—Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—á—ñ–∫—É—î, —â–æ —Ç–∏ –≤–∏–∫–æ–Ω–∞—î—à closure —É—Å–µ—Ä–µ–¥–∏–Ω—ñ —Å–∞–º–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó, –ø–µ—Ä—à –Ω—ñ–∂ –≤–æ–Ω–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è.

@escaping –≤–∫–∞–∑—É—î, —â–æ closure –º–æ–∂–µ ¬´–≤–∏–π—Ç–∏¬ª –∑–∞ –º–µ–∂—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —Ç–æ–±—Ç–æ –±—É–¥–µ –∑–±–µ—Ä–µ–∂–µ–Ω–µ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø—ñ–∑–Ω—ñ—à–µ (–ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∂–µ –∑–∞–∫—ñ–Ω—á–∏–ª–∞ —Ä–æ–±–æ—Ç—É).
–¶–µ –±—É–≤–∞—î, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º—É –∫–æ–¥—ñ ‚Äî –∫–æ–ª–∏ –º–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ completion-handler —É –º–µ—Ä–µ–∂–µ–≤–∏–π –∑–∞–ø–∏—Ç.

üìå –ü—Ä–∏–∫–ª–∞–¥ non-escaping
func performTwice(action: () -> Void) {
    action()
    action()
}

performTwice {
    print("–í–∏–∫–æ–Ω—É—é –∑–∞—Ä–∞–∑")
}


action –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó ‚Äî –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è, @escaping –Ω–µ —Ç—Ä–µ–±–∞.

üìå –ü—Ä–∏–∫–ª–∞–¥ escaping
var storedClosure: (() -> Void)?

func saveClosure(_ closure: @escaping () -> Void) {
    storedClosure = closure // –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—ñ–∑–Ω—ñ—à–µ
}

saveClosure {
    print("–¶–µ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è –ø—ñ–∑–Ω—ñ—à–µ")
}

// –î–µ—Å—å –ø–æ—Ç—ñ–º:
storedClosure?()


–¢—É—Ç –º–∏ –∑–±–µ—Ä–µ–≥–ª–∏ closure —É –∑–º—ñ–Ω–Ω—ñ–π storedClosure –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è saveClosure.
–ë–µ–∑ @escaping –∫–æ–º–ø—ñ–ª—è—Ç–æ—Ä –Ω–µ –¥–æ–∑–≤–æ–ª–∏—Ç—å, –±–æ closure –≤–∏–π—à–æ–≤ –∑–∞ –º–µ–∂—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.

–ö–æ–ª–∏ —Ç—Ä–µ–±–∞ @escaping
	–ö–æ–ª–∏ closure –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ/–∑–º—ñ–Ω–Ω—ñ–π –¥–ª—è –ø—ñ–∑–Ω—ñ—à–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
	–ö–æ–ª–∏ closure –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –≤ —ñ–Ω—à–∏–π API, —è–∫–∏–π –≤–∏–∫–æ–Ω–∞—î –π–æ–≥–æ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤–∞—à–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
	–£ –±—ñ–ª—å—à–æ—Å—Ç—ñ completion-handler –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ