import UIKit

// MARK: LEVEL1 - BASICS -

//func sumOfNumbers(_ n: Int) -> Int {
//    return (1...n).reduce(0, +)
//}
//
//DispatchQueue.global(qos: .background).async {
//    let result = sumOfNumbers(1000)
//    
//    DispatchQueue.main.async {
//        print("---- TASK 1 ----")
//        print("Sum of numbers :", result)
//    }
//}


//print("---- TASK 2 ----")
//let serial = DispatchQueue(label: "example.serial")
//
//serial.async {
//    print(1)
//}
//
//serial.async {
//    print(2)
//}
//
//serial.async {
//    print(3)
//}

//print("---- TASK 3 ----")
//let concurrent = DispatchQueue(label: "example.concurrent", attributes: .concurrent)
//
//concurrent.async {
//    print("Task1 finished immediately")
//}
//
//concurrent.async {
//    sleep(3)
//    print("Task2 finished after 3 sec")
//}
//
//concurrent.async {
//    sleep(1)
//    print("Task3 finished after 1 sec")
//}

/*
üìå –ö–æ—Ä–æ—Ç–∫–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫:

üîπ Serial Queue (–ø–æ—Å–ª—ñ–¥–æ–≤–Ω–∞ —á–µ—Ä–≥–∞)
–ó–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è —Å—Ç—Ä–æ–≥–æ –æ–¥–Ω–µ –∑–∞ –æ–¥–Ω–∏–º.
–ù–∞—Å—Ç—É–ø–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–µ –ø–æ—á–Ω–µ—Ç—å—Å—è, –¥–æ–∫–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è.
–ü–æ—Ä—è–¥–æ–∫ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –±–µ–∑–ø–µ–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ —Å–ø—ñ–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∞–±–æ –≤–∞–∂–ª–∏–≤–∏–π –ø–æ—Ä—è–¥–æ–∫.

 1. Label
 Label (–º—ñ—Ç–∫–∞, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "example.serial")
 –¶–µ —Ä—è–¥–æ–∫-—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —á–µ—Ä–≥–∏.
 –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è (debugging), —â–æ–± —É Xcode / Instruments —Ç–∏ –±–∞—á–∏–≤, —è–∫–∞ —Å–∞–º–µ —á–µ—Ä–≥–∞ –≤–∏–∫–æ–Ω—É—î –∑–∞–≤–¥–∞–Ω–Ω—è.
 –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –≤ —Ç–µ–±–µ –∫—ñ–ª—å–∫–∞ –≤–ª–∞—Å–Ω–∏—Ö —á–µ—Ä–≥, —É –ª–æ–≥–∞—Ö –±—É–¥–µ –ª–µ–≥—à–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, –∑–≤—ñ–¥–∫–∏ –ø—Ä–∏–π—à–æ–≤ –ø–æ—Ç—ñ–∫.

 
üîπ Concurrent Queue (–ø–∞—Ä–∞–ª–µ–ª—å–Ω–∞ —á–µ—Ä–≥–∞)
–ö—ñ–ª—å–∫–∞ –∑–∞–≤–¥–∞–Ω—å –º–æ–∂—É—Ç—å –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å –æ–¥–Ω–æ—á–∞—Å–Ω–æ –Ω–∞ —Ä—ñ–∑–Ω–∏—Ö –ø–æ—Ç–æ–∫–∞—Ö.
–ü–æ—Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –Ω–µ –≥–∞—Ä–∞–Ω—Ç—É—î—Ç—å—Å—è (—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –º–æ–∂—É—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç–∏ –≤ –±—É–¥—å-—è–∫—ñ–π –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ).
–î–æ–±—Ä–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ñ–æ–Ω–æ–≤–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å, –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö, —Ä–æ–±–æ—Ç–∏ –∑ –º–µ—Ä–µ–∂–µ—é.
 
 2. Attributes
 –¶–µ –æ–ø—Ü—ñ—ó, —è–∫—ñ –≤–∏–∑–Ω–∞—á–∞—é—Ç—å –ø–æ–≤–µ–¥—ñ–Ω–∫—É —á–µ—Ä–≥–∏.
 –Ø–∫—â–æ –∞—Ç—Ä–∏–±—É—Ç–∏ –Ω–µ –≤–∫–∞–∑—É–≤–∞—Ç–∏ ‚Üí —á–µ—Ä–≥–∞ –±—É–¥–µ serial (–ø–æ—Å–ª—ñ–¥–æ–≤–Ω–∞) –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º.
 –Ø–∫—â–æ –ø–µ—Ä–µ–¥–∞—Ç–∏ .concurrent ‚Üí —á–µ—Ä–≥–∞ —Å—Ç–∞–Ω–µ concurrent (–ø–∞—Ä–∞–ª–µ–ª—å–Ω–∞).
*/


// MARK: LEVEl2 - async vs sync -
/*print("---- async vs sync ----")
print("Start")

// === SYNC ===
DispatchQueue.global().sync {
    print("Sync task started")
    // –Ü–º—ñ—Ç—É—î–º–æ –¥–æ–≤–≥—É –∑–∞–¥–∞—á—É
    Thread.sleep(forTimeInterval: 2)   // –ø–æ—Ç—ñ–∫ –±–ª–æ–∫—É—î—Ç—å—Å—è –Ω–∞ 10 —Å–µ–∫ ‚Üí "Sync task finished"
    print("Sync task finished")
}

print("After sync") // –¶–µ–π —Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è sync-–∑–∞–≤–¥–∞–Ω–Ω—è

// === ASYNC ===
DispatchQueue.global().async {
    print("Async task started")
    Thread.sleep(forTimeInterval: 2)   // "Async task started" —Ç–∞ "Async task finished" –∑‚Äô—è–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ ~10 —Å–µ–∫ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ
    print("Async task finished")
}

print("After async") // –¶–µ–π —Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è –æ–¥—Ä–∞–∑—É, –Ω–µ —á–µ–∫–∞—é—á–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è async-–∑–∞–≤–¥–∞–Ω–Ω—è
// –©–æ–± playground –∞–±–æ —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∏–≤—Å—è —Ä–∞–Ω—ñ—à–µ
RunLoop.main.run(until: Date(timeIntervalSinceNow: 3))
*/

/*
 
 –Ø–∫—â–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É (sync) –∑–∞–¥–∞—á—É –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ, –≤—Å–µ –º–æ–∂–µ –ø—ñ—Ç–∏ –¥—É–∂–µ –ø–æ–≥–∞–Ω–æ: deadlock.
 
 DispatchQueue.main.sync {
     print("This will deadlock!")
 }
 
 üîπ –ß–æ–º—É —Ü–µ deadlock:
                    1. DispatchQueue.main.sync { ... } –∫–∞–∂–µ:
                        ¬´–í–∏–∫–æ–Ω–∞–π —Ü—é –∑–∞–¥–∞—á—É –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ —Ç–∞ –∑–∞—á–µ–∫–∞–π, –ø–æ–∫–∏ –≤–æ–Ω–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è¬ª.
                    2. –ê–ª–µ —Ç–∏ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—à –∫–æ–¥ –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ.
                        –¢–æ–±—Ç–æ –≥–æ–ª–æ–≤–Ω–∏–π –ø–æ—Ç—ñ–∫ —á–µ–∫–∞—î, –ø–æ–∫–∏ –∑–∞–¥–∞—á–∞ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è, –∞ –∑–∞–¥–∞—á–∞ –Ω–µ –º–æ–∂–µ –≤–∏–∫–æ–Ω–∞—Ç–∏—Å—è, –±–æ –≥–æ–ª–æ–≤–Ω–∏–π –ø–æ—Ç—ñ–∫ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è–º.
                    3. –†–µ–∑—É–ª—å—Ç–∞—Ç:
                        –ø–æ—Ç—ñ–∫ –∑–∞–≤–∏—Å–∞—î –Ω–∞–∑–∞–≤–∂–¥–∏ ‚Äì deadlock
 
 –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏ –∫–æ–¥ –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ –Ω–µ –±–ª–æ–∫—É—é—á–∏ –π–æ–≥–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π async:
 
 DispatchQueue.main.async {
     print("This is safe")
 }
 
*/


// MARK: LEVEL3 - QoS -
print("---- QoS ----")
DispatchQueue.global(qos: .userInteractive).async {
    sleep(2)
    print(".userInteractice - work")
}

DispatchQueue.global(qos: .utility).async {
    sleep(2)
    print(".utility - work")
}

DispatchQueue.global(qos: .utility).async {
    sleep(2)
    print(".background - work")
}


