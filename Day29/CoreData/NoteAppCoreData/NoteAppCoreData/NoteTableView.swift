//
//  NoteTableView.swift
//  NoteAppCoreData
//
//  Created by mac on 19.10.2025.
//

import UIKit
import CoreData

public var noteList = [Note]()  // –ì–ª–æ–±–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤ ‚Äî —Ç–∏–º—á–∞—Å–æ–≤–µ —Å—Ö–æ–≤–∏—â–µ –Ω–æ—Ç–∞—Ç–æ–∫

class NoteTableView: UITableViewController {
    
    var firstLoad = true   // –ú–∏ —â–µ –∂–æ–¥–Ω–æ–≥–æ —Ä–∞–∑—É –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞–ª–∏ –Ω–æ—Ç–∞—Ç–∫–∏ –∑ –±–∞–∑–∏
    
    // –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –ª–∏—à–µ —Ç—ñ –Ω–æ—Ç–∞—Ç–∫–∏, —è–∫—ñ –Ω–µ –≤–∏–¥–∞–ª–µ–Ω—ñ
    func nonDeletedNotes() -> [Note] {
        var noDeleteNoteList = [Note]()
        for note in noteList {
            if (note.deletedDate == nil) {  // —è–∫—â–æ –Ω–µ–º–∞ –¥–∞—Ç–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—è ‚Üí –ø–æ–∫–∞–∑—É—î–º–æ
                noDeleteNoteList.append(note)
            }
        }
        return noDeleteNoteList
    }
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        if (firstLoad) {
            firstLoad = false
            fetchNotes()        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–æ—Ç–∞—Ç–∫–∏ –∑ –±–∞–∑–∏ Core Data
        }
    }
    
    
    // üß† –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ Core Data
    func fetchNotes() {
        // 1Ô∏è‚É£ –î—ñ—Å—Ç–∞—î–º–æ AppDelegate ‚Äî –≤—ñ–Ω —Ç—Ä–∏–º–∞—î –≥–æ–ª–æ–≤–Ω–∏–π –æ–±‚Äô—î–∫—Ç Core Data: persistentContainer
        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {
            print("‚ùóÔ∏è–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ AppDelegate")
            return
        }
        
        // 2Ô∏è‚É£ –ö–æ–Ω—Ç–µ–∫—Å—Ç ‚Äî —Ü–µ ‚Äú–¥–≤–µ—Ä—ñ‚Äù –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö. –ß–µ—Ä–µ–∑ –Ω—å–æ–≥–æ –º–∏ —á–∏—Ç–∞—î–º–æ, –¥–æ–¥–∞—î–º–æ –∞–±–æ –≤–∏–¥–∞–ª—è—î–º–æ –¥–∞–Ω—ñ
        let context = appDelegate.persistentContainer.viewContext
        
        // 3Ô∏è‚É£ –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç: ‚Äú–î–∞–π —É—Å—ñ –æ–±‚Äô—î–∫—Ç–∏ –∑ —Ç–∞–±–ª–∏—Ü—ñ Note‚Äù
        let request = NSFetchRequest<Note>(entityName: "Note")

        // 4Ô∏è‚É£ –≤–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç —ñ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç (—É—Å—ñ –Ω–æ—Ç–∞—Ç–∫–∏) —É –º–∞—Å–∏–≤ noteList
        do {
            noteList = try context.fetch(request)
            print("‚úÖ Notes fetched: \(noteList.count)")
        } catch {
            print("‚ùå Fetch failed: \(error.localizedDescription)")
        }
    }
    
    
    // üîπ –í–∏–≤–æ–¥–∏–º–æ –∫–æ–∂–Ω—É –Ω–æ—Ç–∞—Ç–∫—É —É —Ç–∞–±–ª–∏—Ü—é
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let noteCell = tableView.dequeueReusableCell(withIdentifier: "noteCellID", for: indexPath) as! NoteCell
        
        let thisNote = nonDeletedNotes()[indexPath.row]
        
        noteCell.titleLabel.text = thisNote.title
        noteCell.descLabel.text = thisNote.desc
        
        return noteCell
    }
    
    // üîπ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤ —É —Ç–∞–±–ª–∏—Ü—ñ
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return nonDeletedNotes().count
    }
    
    // üîπ –ü—ñ—Å–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ –µ–∫—Ä–∞–Ω —Ç–∞–±–ª–∏—Ü—ñ ‚Äî –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
    override func viewDidAppear(_ animated: Bool) {
        tableView.reloadData()
    }
    
    // üîπ –ö–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –Ω–∞ —Ä—è–¥–æ–∫ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –µ–∫—Ä–∞–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.performSegue(withIdentifier: "editNote", sender: self)
    }
    
    // üîπ –ü–µ—Ä–µ–¥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω—É –Ω–æ—Ç–∞—Ç–∫—É –Ω–∞ –µ–∫—Ä–∞–Ω —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if (segue.identifier == "editNote") {
            let indexPath = tableView.indexPathForSelectedRow!
            let noteDetail = segue.destination as? NoteDetailVC
            let selectedNote = nonDeletedNotes()[indexPath.row]
            noteDetail!.selectedNote = selectedNote
            
            tableView.deselectRow(at: indexPath, animated: true)
        }
    }
}
